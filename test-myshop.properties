spring:
  batch:
    initialize-schema: always
    chunk-size: ${BATCH_SIZE:30}
    job:
      enabled: false
  application:
    name: myshop-service
  profiles:
    active: ${ENV:dev}
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://192.168.89.53/aje_myshop}
    username: ${DATABASE_USER:aje_myshop}
    password: ${DATABASE_PASSWORD:kfBSsyBdTQky25IR}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: hikari-profile
      auto-commit: true
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
      minimum-idle: 3
      maximum-pool-size: 20
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
      hibernate:
        jdbc:
          batch_size: 400
        order_updates: true
        order_inserts: true
    hibernate:
      ddl-auto: update
      use-new-id-generator-mappings: false

  redis:
    host: ${REDIS_HOST:192.168.89.52}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    lettuce:
      pool:
        min-idle: 5
        max-idle: 10
        max-active: 8
        max-wait: 1ms
        shutdown-timeout: 100ms

  kafka:
    consumer:
      bootstrap-servers: ${CONSUMER_BOOTSTRAP_SERVERS:192.168.89.52:9092}
      group-id: ${NOTIFICATION_GROUP_ID:group_id_notification_dev}
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      accounting:
        id: ${ACCOUNTING_CONSUMER_ID:ACCOUNTING_TRANSACTION}
        group-id: ${ACCOUNTING_CONSUMER_ID:group_id_notification_accounting_transaction}
      max-poll-records: 1000
    producer:
      bootstrap-servers: ${PRODUCER_BOOTSTRAP_SERVERS:10.50.99.50:30001}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      missing-topics-fatal: false
      type: batch
      concurrency: 10
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:192.168.89.52:9092}
    topics:
      notify: ${NOTIFICATION_NOTIFY:com.message.notification.push}
      email: ${NOTIFICATION_EMAIL:com.message.notification.mail}
      accounting-transaction: ${NOTIFICATION_ACCOUNTING_TRANSACTION:com.message.smartbank.accounting-transaction}
      execute-accounting-transaction: ${EXECUTE_ACCOUNTING_TRANSACTION:com.message.smartbank.execute-accounting-transaction}
    groups:
      email-consumer-group: ${EMAIL_CONSUMER_GROUP:group.notification.email-cloud}
      sms-consumer-group: ${SMS_CONSUMER_GROUP:group.notification.sms-cloud}
      push-consumer-group: ${PUSH_CONSUMER_GROUP:group.notification.push-cloud}
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_URI:}${KEYCLOAK_PATH:https://idp-internal.dev.kienlongbank.co}/realms/${PROFILE_REALM:ssf}/protocol/openid-connect/certs
          issuer-uri: ${KEYCLOAK_URI:}${KEYCLOAK_PATH:https://idp-internal.dev.kienlongbank.co}/realms/${PROFILE_REALM:ssf}
